# This is a basic workflow to help you get started with Actions

name: release build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      dim_version:
        description: Set the dim version number for the release.
        default: 3.0.4
      dimclient_version:
        description: Set the dimclient version number for the release.
        default: 0.4.2
      ndcli_version:
        description: Set the ndcli version number for the release.
        default: 3.0.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - run: tar --transform="s,^dim/,dim-${dim_version}/," -czf "dim-src-${dim_version}.tar.gz" dim
        if: ${{ github.event.inputs.dim_version != '' }}
        env:
          dim_version: ${{ github.event.inputs.dim_version }}
      - run: tar --transform="s,^ndcli/,ndcli-${ndcli_version}/," -czf "ndcli-src-${ndcli_version}.tar.gz" ndcli
        if: ${{ github.event.inputs.ndcli_version != '' }}
        env:
          ndcli_version: ${{ github.event.inputs.ndcli_version }}
      - run: tar --transform="s,^dimclient/,dimclient-${dimclient_version}/," -czf "dimclient-src-${dimclient_version}.tar.gz" dimclient
        if: ${{ github.event.inputs.dimclient_version != '' }}
        env:
          dimclient_version: ${{ github.event.inputs.dimclient_version }}
      - uses: actions/upload-artifact@v2
        if: ${{ github.event.inputs.dim_version != '' }}
        with:
          name: dim-src-${{ github.event.inputs.dim_version }}.tar.gz
          path: dim-src-${{ github.event.inputs.dim_version }}.tar.gz
      - uses: actions/upload-artifact@v2
        if: ${{ github.event.inputs.ndcli_version != '' }}
        with:
          name: ndcli-src-${{ github.event.inputs.ndcli_version }}.tar.gz
          path: ndcli-src-${{ github.event.inputs.ndcli_version }}.tar.gz
      - uses: actions/upload-artifact@v2
        if: ${{ github.event.inputs.dimclient_version != '' }}
        with:
          name: dimclient-src-${{ github.event.inputs.dimclient_version }}.tar.gz
          path: dimclient-src-${{ github.event.inputs.dimclient_version }}.tar.gz

  build_centos_dim:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: centos:centos8
      env:
        DIM_VERSION: ${{ github.event.inputs.dim_version }}
    steps:
      - uses: actions/checkout@v2
      - run: /bin/dnf install --assumeyes openldap-devel gcc python3-devel mariadb-devel git python3 rpm-build
      - run: /bin/python3 -m venv /opt/dim/
      - run: /opt/dim/bin/pip3 install -r dim/requirements.txt
      - run: /opt/dim/bin/pip3 install dim
      - run: /bin/tar --transform="s,^opt,dim-${DIM_VERSION}/opt," -czf "/tmp/dim-bin.tar.gz" opt
        working-directory: /
      - run: pwd
      - run: mkdir -p ${HOME}/rpmbuild/SPECS
      - run: mkdir -p ${HOME}/rpmbuild/SOURCES
      - shell: sh
        run: |
          cat <<EOF > ${HOME}/rpmbuild/SPECS/dim.spec
          Name:    dim
          Version: ${DIM_VERSION}
          Release: 1
          Summary: DNS and IP management

          Group: application/system
          License: MIT

          Source0: dim-%{version}.tar.gz

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true

          %description
          DNS and IP management

          %prep
          %setup -q #unpack tarball

          %build

          %install
          cp -rfa * %{buildroot}

          %files
          /opt/*
          EOF
      - run: cp /tmp/dim-bin.tar.gz ${HOME}/rpmbuild/SOURCES/dim-${DIM_VERSION}.tar.gz
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/dim.spec
      - uses: actions/upload-artifact@v2
        with:
          name: dim-${{ github.event.inputs.dim_version }}-1.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/dim-${{ github.event.inputs.dim_version }}-1.x86_64.rpm

  build_centos_packages:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: centos:centos8
      env:
        NDCLI_VERSION: ${{ github.event.inputs.ndcli_version }}
        DIMCLIENT_VERSION: ${{ github.event.inputs.dimclient_version }}
    steps:
      - uses: actions/checkout@v2
      - run: pwd
      - run: mkdir -p ${HOME}/rpmbuild/SPECS
      - run: mkdir -p ${HOME}/rpmbuild/SOURCES
      - run: /bin/dnf install --assumeyes epel-release
      - run: /bin/dnf install --assumeyes python3-devel python3 rpm-build python3-dns python3-simplejson
      - uses: actions/download-artifact@v2
        with:
          name: dimclient-src-${{ github.event.inputs.dimclient_version }}.tar.gz
          path: ~/rpmbuild/SOURCES/
      - uses: actions/download-artifact@v2
        with:
          name: ndcli-src-${{ github.event.inputs.ndcli_version }}.tar.gz
          path: ~/rpmbuild/SOURCES/
      - shell: sh
        run: |
          cat <<EOF > ${HOME}/rpmbuild/SPECS/dimclient.spec
          Name:    python3-dimclient
          Version: ${DIMCLIENT_VERSION}
          Release: 1
          Summary: DNS and IP management python library

          Group: application/system
          License: MIT

          Source0: dimclient-src-%{version}.tar.gz
          BuildRequires: python3-devel
          BuildRequires: python3-simplejson
          Requires: python3-simplejson
          Requires: python3

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true

          %description
          DNS and IP management

          %prep
          %autosetup -p1 -n dimclient-%{version}

          %build
          %py3_build

          %install
          %py3_install

          %files
          %{python3_sitelib}/*
          EOF

          cat <<EOF > ${HOME}/rpmbuild/SPECS/ndcli.spec
          Name:    python3-ndcli
          Version: ${NDCLI_VERSION}
          Release: 1
          Summary: DNS and IP management

          Group: application/system
          License: MIT

          Source0: ndcli-src-%{version}.tar.gz
          BuildRequires: python3-devel
          BuildRequires: python3-dimclient
          BuildRequires: python3-dns
          Requires: python3-dimclient
          Requires: python3-dns
          Requires: python3

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true

          %description
          DNS and IP management

          %prep
          %autosetup -p1 -n ndcli-%{version}

          %build
          %py3_build

          %install
          %py3_install

          %files
          %{python3_sitelib}/*
          %{_bindir}/*
          EOF
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/dimclient.spec
      - run: rpm -i ${HOME}/rpmbuild/RPMS/x86_64/python3-dimclient-${DIMCLIENT_VERSION}-1.x86_64.rpm
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/ndcli.spec
      - uses: actions/upload-artifact@v2
        with:
          name: python3-dimclient-${{ github.event.inputs.dimclient_version }}-1.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/python3-dimclient-${{ github.event.inputs.dimclient_version }}-1.x86_64.rpm
      - uses: actions/upload-artifact@v2
        with:
          name: python3-ndcli-${{ github.event.inputs.ndcli_version }}-1.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/python3-ndcli-${{ github.event.inputs.ndcli_version }}-1.x86_64.rpm

  build_debian_packages:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: debian:10
      env:
        DIM_VERSION: ${{ github.event.inputs.dim_version }}
        NDCLI_VERSION: ${{ github.event.inputs.ndcli_version }}
        DIMCLIENT_VERSION: ${{ github.event.inputs.dimclient_version }}
    steps:
      - uses: actions/checkout@v2
      - run: apt-get update
      - run: apt-get install --yes build-essential python3 python3-dnspython bash-completion dh-python python3-setuptools python3-all debhelper devscripts
      - run: cp -vr packaging/debian/dimclient/* dimclient/
      - run: cp -vr packaging/debian/ndcli/* ndcli/
      - run: dch --create --package dimclient --newversion ${{ github.event.inputs.dimclient_version }} --distribution unstable 'release update'
        working-directory: dimclient
        env:
          DEBMAIL: unknown <unknown@unknown>
      - run: dch --create --package ndcli --newversion ${{ github.event.inputs.ndcli_version }} --distribution unstable 'release update'
        working-directory: ndcli
        env:
          DEBMAIL: unknown <unknown@unknown>
      - run: dpkg-buildpackage -us -uc -b
        working-directory: dimclient
      - run: apt-get install --yes ./python3-dimclient*
      - run: dpkg-buildpackage -us -uc -b
        working-directory: ndcli
      - uses: actions/upload-artifact@v2
        with:
          name: python3-dimclient_${{ github.event.inputs.dimclient_version }}_all.deb
          path: python3-dimclient_${{ github.event.inputs.dimclient_version }}_all.deb
      - uses: actions/upload-artifact@v2
        with:
          name: python3-ndcli_${{ github.event.inputs.ndcli_version }}_all.deb
          path: python3-ndcli_${{ github.event.inputs.ndcli_version }}_all.deb

  build_debian_dim:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: debian:10
      env:
        DIM_VERSION: ${{ github.event.inputs.dim_version }}
        NDCLI_VERSION: ${{ github.event.inputs.ndcli_version }}
        DIMCLIENT_VERSION: ${{ github.event.inputs.dimclient_version }}
    steps:
      - uses: actions/checkout@v2
      - run: apt-get update
      - run: apt-get install --yes build-essential python3 python3-dnspython dh-python python3-setuptools python3-all debhelper python3-flask-sqlalchemy devscripts
      - run: cp -vr packaging/debian/dim/* dim/
      - run: dch --create --package dim --newversion ${{ github.event.inputs.dim_version }} --distribution unstable 'release update'
        working-directory: dim
        env:
          DEBMAIL: unknown <unknown@unknown>
      - run: dpkg-buildpackage -us -uc -b
        working-directory: dim
      - uses: actions/upload-artifact@v2
        with:
          name: python3-dim_${{ github.event.inputs.dim_version }}_all.deb
          path: python3-dim_${{ github.event.inputs.dim_version }}_all.deb

  # create the release on github in preparation to attach all files.
  create_release:
    runs-on: ubuntu-latest
    needs:
      - build_debian_dim
      - build_debian_packages
      - build_centos_packages
      - build_centos_dim
    steps:
      - uses: actions/checkout@v2
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.dim_version }}
          release_name: dim ${{ github.event.inputs.dim_version }}
          draft: true

      - uses: actions/download-artifact@v2
        with:
          name: ndcli-src-${{ github.event.inputs.ndcli_version }}.tar.gz
      - uses: actions/download-artifact@v2
        with:
          name: dimclient-src-${{ github.event.inputs.dimclient_version }}.tar.gz
      - uses: actions/download-artifact@v2
        with:
          name: dim-src-${{ github.event.inputs.dim_version}}.tar.gz
      - uses: actions/download-artifact@v2
        with:
          name: python3-ndcli-${{ github.event.inputs.ndcli_version }}-1.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-ndcli_${{ github.event.inputs.ndcli_version }}_all.deb
      - uses: actions/download-artifact@v2
        with:
          name: python3-dimclient-${{ github.event.inputs.dimclient_version }}-1.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-dimclient_${{ github.event.inputs.dimclient_version }}_all.deb
      - uses: actions/download-artifact@v2
        with:
          name: dim-${{ github.event.inputs.dim_version }}-1.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-dim_${{ github.event.inputs.dim_version }}_all.deb

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ndcli-src-${{ github.event.inputs.ndcli_version }}.tar.gz
          asset_name: ndcli-src-${{ github.event.inputs.ndcli_version }}.tar.gz
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dimclient-src-${{ github.event.inputs.dimclient_version }}.tar.gz
          asset_name: dimclient-src-${{ github.event.inputs.dimclient_version }}.tar.gz
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dim-src-${{ github.event.inputs.dim_version }}.tar.gz
          asset_name: dim-src-${{ github.event.inputs.dim_version }}.tar.gz
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-ndcli_${{ github.event.inputs.ndcli_version }}_all.deb
          asset_name: python3-ndcli_${{ github.event.inputs.ndcli_version }}_all.deb
          asset_content_type: application/vnd.debian.binary-package
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-dimclient_${{ github.event.inputs.dimclient_version }}_all.deb
          asset_name: python3-dimclient_${{ github.event.inputs.dimclient_version }}_all.deb
          asset_content_type: application/vnd.debian.binary-package
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-dim_${{ github.event.inputs.dim_version }}_all.deb
          asset_name: python3-dim_${{ github.event.inputs.dim_version }}_all.deb
          asset_content_type: application/vnd.debian.binary-package
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dim-${{ github.event.inputs.dim_version }}-1.x86_64.rpm
          asset_name: dim-${{ github.event.inputs.dim_version }}-1.x86_64.rpm
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-ndcli-${{ github.event.inputs.ndcli_version }}-1.x86_64.rpm
          asset_name: python3-ndcli-${{ github.event.inputs.ndcli_version }}-1.x86_64.rpm
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-dimclient-${{ github.event.inputs.dimclient_version }}-1.x86_64.rpm
          asset_name: python3-dimclient-${{ github.event.inputs.dimclient_version }}-1.x86_64.rpm
          asset_content_type: application/octet-stream
