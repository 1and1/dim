# This release process looks for dim-web tags and produces releases
# build on the version number.
name: release_dim-web

on:
  push:
    tags:
      - 'dim-web-*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    container:
      image: debian:11
      env:
        _VERSION: ${{ needs.build.outputs.version }}

    steps:
      - run: echo "::set-output name=version::$(echo "$_REF" | cut -d'-' -f3-)"
        id: version
        shell: bash
        env:
          _REF: ${{ github.ref }}
      - run: apt-get update
      - run: apt-get install --yes npm
      - uses: actions/checkout@v2
      - run: npm install
        working-directory: dim-web
      - run: npm run build
        working-directory: dim-web
      - run: mv dist www
        working-directory: dim-web
      - run: tar --transform="s,^dim-web/,dim-web-${_version}/," -czvf "dim-web-src-${_version}.tar.gz" dim-web/setup.py dim-web/www dim-web/cas.wsgi dim-web/README.md dim-web/cas dim-web/test
        env:
          _version: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v2
        with:
          name: dim-web-src-${{ steps.version.outputs.version }}.tar.gz
          path: dim-web-src-${{ steps.version.outputs.version }}.tar.gz

  el8:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: oraclelinux:8
      env:
        _VERSION: ${{ needs.build.outputs.version }}
    steps:
      - run: /bin/dnf install --assumeyes python39-devel python39 rpm-build tar gzip
      - uses: actions/download-artifact@v2
        with:
          name: dim-web-src-${{ needs.build.outputs.version }}.tar.gz
          path: /tmp/
      - run: tar -xzf dim-web-src-${{ needs.build.outputs.version }}.tar.gz
        working-directory: /tmp
      - run: /bin/python3.9 -m venv /opt/dim-web/
      - run: /opt/dim-web/bin/pip3 install /tmp/dim-web-${{ needs.build.outputs.version }}
      - run: /bin/tar --transform="s,^opt,dim-web-${_VERSION}/opt," -czf "/tmp/dim-web-bin.tar.gz" opt
        working-directory: /
      - run: mkdir -p ${HOME}/rpmbuild/SPECS
      - run: mkdir -p ${HOME}/rpmbuild/SOURCES
      - shell: sh
        run: |
          cat <<EOF > ${HOME}/rpmbuild/SPECS/dim-web.spec
          Name:    dim-web
          Version: ${_VERSION}
          Release: 1.el8
          Summary: DNS and IP management WebUI including CAS

          Group: application/system
          License: MIT

          Source0: dim-web-%{version}.tar.gz
          BuildRequires: python39-devel
          Requires: python39
          Recommends: python39-mod_wsgi
          Obsoletes: python3-dim-web
          Provides: python3-dim-web = %{version}-%{release}

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true
          # Disable creation of build-id links
          %define _build_id_links none

          %description
          DNS and IP management

          %prep
          %setup -q #unpack tarball

          %build

          %install
          cp -rfa * %{buildroot}

          %files
          /opt/*
          EOF
      - run: cp /tmp/dim-web-bin.tar.gz ${HOME}/rpmbuild/SOURCES/dim-web-${_VERSION}.tar.gz
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/dim-web.spec
      - uses: actions/upload-artifact@v2
        with:
          name: dim-web-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/dim-web-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm

  debian:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: debian:11
      env:
        _VERSION: ${{ needs.build.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dim-web-src-${{ needs.build.outputs.version }}.tar.gz
      - run: tar -xzf dim-web-src-${{ needs.build.outputs.version }}.tar.gz
      - run: apt-get update
      - run: apt-get install --yes build-essential python3 python3-flask python3-setuptools python3-all dh-python debhelper devscripts
      - run: cp -vr packaging/debian/dim-web/* dim-web-${{ needs.build.outputs.version }}/
      - run: dch --create --package dim-web --newversion ${{ needs.build.outputs.version }} --distribution unstable 'release update'
        working-directory: dim-web-${{ needs.build.outputs.version }}
        env:
          DEBMAIL: unknown <unknown@unknown>
      - run: dpkg-buildpackage -us -uc -b
        working-directory: dim-web-${{ needs.build.outputs.version }}
      - uses: actions/upload-artifact@v2
        with:
          name: python3-dim-web_${{ needs.build.outputs.version }}_all.deb
          path: python3-dim-web_${{ needs.build.outputs.version }}_all.deb

  create_release:
    runs-on: ubuntu-latest
    needs:
      - build
      - debian
      - el8
    steps:
      - uses: actions/checkout@v2
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true

      - uses: actions/download-artifact@v2
        with:
          name: dim-web-src-${{ needs.build.outputs.version }}.tar.gz
      - uses: actions/download-artifact@v2
        with:
          name: dim-web-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-dim-web_${{ needs.build.outputs.version }}_all.deb

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dim-web-src-${{ needs.build.outputs.version }}.tar.gz
          asset_name: dim-web-src-${{ needs.build.outputs.version }}.tar.gz
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-dim-web_${{ needs.build.outputs.version }}_all.deb
          asset_name: python3-dim-web_${{ needs.build.outputs.version }}_all.deb
          asset_content_type: application/vnd.debian.binary-package
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dim-web-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
          asset_name: dim-web-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
          asset_content_type: application/octet-stream
